{"version":3,"sources":["components/other/Header/Header.styles.ts","components/other/Nav/Nav.styles.ts","redux/menu.ts","components/other/Nav/Nav.tsx","components/other/HamburgerButton/HamburgerButton.styles.ts","components/other/HamburgerButton/HamburgerButton.tsx","components/other/Header/Header.tsx","components/other/SectionContainer/SectionContainer.styles.ts","components/other/Headlines/Headlines.styles.ts","components/other/SectionContainer/SectionContainer.tsx","components/other/ArticleContainer/ArticleContainer.styles.ts","components/other/ArticleContainer/ArticleContainer.tsx","components/other/ButtonLink/ButtonLink.styles.ts","components/other/ButtonLink/ButtonLink.tsx","assets/styles/theme.ts","components/sections/HeroSection/HeroSection.tsx","components/sections/ProjectsSection/ProjectsData.ts","components/sections/ProjectsSection/ProjectsSection.styles.ts","components/sections/ProjectsSection/ProjectsSection.tsx","App.tsx","redux/reducer.ts","redux/store.ts","assets/styles/GlobalStyle.ts","index.tsx"],"names":["StyledHeader","styled","header","theme","headerHeight","colors","yellow","black","menuBreakPoint","StyledLogo","div","yellowHover","StyledNav","nav","isMenuOpen","blackHover","menuSlice","createSlice","name","initialState","reducers","toggleMenu","state","console","log","closeMenu","menuReducer","reducer","actions","menuOptions","text","link","Nav","useSelector","dispatch","useDispatch","onClick","map","el","href","StyledHamburgerButton","button","HamburgerButton","isOpenClassNameForWrapper","className","Header","StyledSectionContainer","section","minusHeight","textColor","bgColor","Wrapper","centerXY","SectionHeadline","h2","ArticleHeadline","SectionContainer","headlineText","children","StyledArticleContainer","article","borderColor","articleWidthBreakPoint","BoldText","span","ArticleContainer","StyledButtonLink","a","buttonsBreakPoint","ButtonsWrapper","ButtonLink","white","HeroSection","ProjectsData","title","desc","technologies","liveLink","githubLink","ProjectsWrapper","ProjectsSection","ProjectsArr","tech","App","store","configureStore","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.958c87c6.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 20;\r\n  height: ${({ theme }) => theme.headerHeight};\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.yellow};\r\n  background-color: ${({ theme }) => theme.colors.black};\r\n  padding: 0 4rem;\r\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n    rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n\r\n  @media only screen and (max-width: calc(${({ theme }) =>\r\n      theme.menuBreakPoint} + 100px)) {\r\n    padding: 0 2rem;\r\n  }\r\n\r\n  @media only screen and (max-width: ${({ theme }) => theme.menuBreakPoint}) {\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.colors.yellowHover};\r\n  position: relative;\r\n  border-bottom: dashed 4px ${({ theme }) => theme.colors.yellow};\r\n\r\n  .left {\r\n    transform: rotate(-90deg);\r\n  }\r\n  .right {\r\n    position: relative;\r\n    top: 1px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  isMenuOpen: boolean;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const StyledNav = styled.nav<Props>`\r\n  height: 100%;\r\n\r\n  ul {\r\n    display: flex;\r\n    height: 100%;\r\n    list-style: none;\r\n    transition: all 0.4s ease-in-out;\r\n\r\n    @media only screen and (max-width: ${({ theme }) => theme.menuBreakPoint}) {\r\n      flex-direction: column;\r\n      position: absolute;\r\n      z-index: 10;\r\n      top: ${({ theme }) => theme.headerHeight};\r\n      left: 0;\r\n      width: 100%;\r\n      height: calc(100vh - ${({ theme }) => theme.headerHeight});\r\n      transform: translateX(${({ isMenuOpen }) => (isMenuOpen ? \"0\" : \"100%\")});\r\n    }\r\n\r\n    li {\r\n      height: 100%;\r\n\r\n      @media only screen and (max-width: ${({ theme }) =>\r\n          theme.menuBreakPoint}) {\r\n        background-color: ${({ theme }) => theme.colors.blackHover};\r\n        a {\r\n          color: ${({ theme }) => theme.colors.yellowHover};\r\n        }\r\n        &:nth-child(odd) {\r\n          background-color: ${({ theme }) => theme.colors.yellowHover};\r\n          a {\r\n            color: ${({ theme }) => theme.colors.blackHover};\r\n          }\r\n        }\r\n      }\r\n\r\n      a {\r\n        text-decoration: none;\r\n        display: flex;\r\n        position: relative;\r\n        align-items: center;\r\n        height: 100%;\r\n        padding: 0 3rem;\r\n        color: ${({ theme }) => theme.colors.yellow};\r\n        font-weight: 700;\r\n        font-size: 1.5rem;\r\n        transition: all 0.3s ease-in-out;\r\n\r\n        &::before {\r\n          display: block;\r\n          position: absolute;\r\n          content: \"\";\r\n          height: 5px;\r\n          width: 0;\r\n          bottom: 0;\r\n          left: 50%;\r\n          background-color: ${({ theme }) => theme.colors.yellow};\r\n          transition: all 0.3s ease-in-out;\r\n        }\r\n        &::after {\r\n          display: block;\r\n          position: absolute;\r\n          content: \"\";\r\n          height: 5px;\r\n          width: 0;\r\n          bottom: 0;\r\n          left: 50%;\r\n          background-color: ${({ theme }) => theme.colors.yellow};\r\n          transition: all 0.3s ease-in-out;\r\n        }\r\n\r\n        &:hover,\r\n        &:focus {\r\n          @media only screen and (min-width: ${({ theme }) =>\r\n              theme.menuBreakPoint}) {\r\n            color: ${({ theme }) => theme.colors.yellowHover};\r\n            background-color: ${({ theme }) => theme.colors.blackHover};\r\n\r\n            &::before {\r\n              left: 0;\r\n              width: 50%;\r\n            }\r\n            &::after {\r\n              width: 50%;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isMenuOpen: false,\r\n};\r\n\r\nconst menuSlice = createSlice({\r\n  name: \"menu\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    toggleMenu: (state) => {\r\n      console.log(\"xd\");\r\n      state.isMenuOpen = !state.isMenuOpen;\r\n    },\r\n    closeMenu: (state) => {\r\n      state.isMenuOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const menuReducer = menuSlice.reducer;\r\nexport const { toggleMenu, closeMenu } = menuSlice.actions;\r\n","import { StyledNav } from \"./Nav.styles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { closeMenu } from \"redux/menu\";\r\nimport { TStore } from \"redux/store\";\r\n\r\nconst menuOptions = [\r\n  { text: \"Home\", link: \"#\" },\r\n  { text: \"Projects\", link: \"#\" },\r\n  { text: \"Skills\", link: \"#\" },\r\n  { text: \"About\", link: \"#\" },\r\n  { text: \"Contact\", link: \"#\" },\r\n];\r\n\r\nconst Nav: React.FunctionComponent = () => {\r\n  const isMenuOpen = useSelector(\r\n    ({ menuReducer }: TStore) => menuReducer.isMenuOpen\r\n  );\r\n\r\n  const dispatch: Dispatch = useDispatch();\r\n\r\n  const handleCloseMenu = () => {\r\n    dispatch(closeMenu());\r\n  };\r\n  return (\r\n    <StyledNav isMenuOpen={isMenuOpen}>\r\n      <ul onClick={handleCloseMenu}>\r\n        {menuOptions.map((el) => (\r\n          <li key={el.text}>\r\n            <a href={el.link}>{el.text}</a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHamburgerButton = styled.button`\r\n  border: none;\r\n  transition: all 0.4s ease-in-out;\r\n  padding: 0 1rem;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  height: 100%;\r\n\r\n  @media only screen and (min-width: ${({ theme }) => theme.menuBreakPoint}) {\r\n    display: none;\r\n  }\r\n\r\n  &:hover {\r\n    .hamburger__line {\r\n      background-color: ${({ theme }) => theme.colors.yellowHover};\r\n    }\r\n  }\r\n\r\n  .hamburger__wrapper {\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    transition: all 0.4s ease-in-out;\r\n  }\r\n\r\n  .hamburger__line {\r\n    display: block;\r\n    width: 120%;\r\n    height: 6px;\r\n    background-color: ${({ theme }) => theme.colors.yellow};\r\n    content: \"\";\r\n    border-radius: 5px;\r\n    transition: all 0.4s ease-in-out;\r\n\r\n    &--top {\r\n      transform-origin: left top;\r\n    }\r\n    &--bottom {\r\n      transform-origin: left bottom;\r\n    }\r\n  }\r\n\r\n  .isOpen {\r\n    transform-origin: 50% 50%;\r\n    transform: rotate(360deg);\r\n\r\n    .hamburger__line {\r\n      width: 3.1rem;\r\n      &--top {\r\n        transform: rotate(45deg);\r\n      }\r\n      &--middle {\r\n        width: 0;\r\n      }\r\n      &--bottom {\r\n        transform: rotate(-45deg);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { StyledHamburgerButton } from \"./HamburgerButton.styles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { toggleMenu } from \"redux/menu\";\r\nimport { TStore } from \"redux/store\";\r\n\r\nexport const HamburgerButton: React.FunctionComponent = () => {\r\n  const isMenuOpen = useSelector(\r\n    ({ menuReducer }: TStore) => menuReducer.isMenuOpen\r\n  );\r\n\r\n  const dispatch: Dispatch = useDispatch();\r\n\r\n  const handleToggleMenu = () => {\r\n    dispatch(toggleMenu());\r\n  };\r\n\r\n  const isOpenClassNameForWrapper = `hamburger__wrapper ${\r\n    isMenuOpen ? \"isOpen\" : \"\"\r\n  }`;\r\n  console.log(isOpenClassNameForWrapper);\r\n  return (\r\n    <StyledHamburgerButton onClick={handleToggleMenu}>\r\n      <div className={isOpenClassNameForWrapper}>\r\n        <span className=\"hamburger__line hamburger__line--top\" />\r\n        <span className=\"hamburger__line hamburger__line--middle\" />\r\n        <span className=\"hamburger__line hamburger__line--bottom\" />\r\n      </div>\r\n    </StyledHamburgerButton>\r\n  );\r\n};\r\n\r\nexport default HamburgerButton;\r\n","import { StyledHeader, StyledLogo } from \"./Header.styles\";\r\nimport Nav from \"components/other/Nav/Nav\";\r\nimport HamburgerButton from \"components/other/HamburgerButton/HamburgerButton\";\r\n\r\nconst Header: React.FunctionComponent = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <StyledLogo>\r\n        <div className={\"left\"}>M</div>\r\n        <div className={\"right\"}>D</div>\r\n      </StyledLogo>\r\n      <Nav />\r\n      <HamburgerButton />\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\ninterface IStyledSectionContainerProps {\r\n  bgColor: string;\r\n  textColor: string;\r\n  minusHeight: string;\r\n}\r\n\r\ninterface IWrapperProps {\r\n  centerXY: boolean;\r\n}\r\n\r\nexport const StyledSectionContainer = styled.section<IStyledSectionContainerProps>`\r\n  width: 100%;\r\n  min-height: calc(100vh - ${({ minusHeight }) => minusHeight ?? \"0px\"});\r\n  color: ${({ textColor }) => textColor};\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n\r\n  @media only screen and (min-width: ${({ theme }) => theme.menuBreakPoint}) {\r\n    padding: 4rem;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div<IWrapperProps>`\r\n  height: 100%;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  display: flex;\r\n\r\n  ${({ centerXY }) =>\r\n    centerXY &&\r\n    `display: flex;\r\n    justify-content: center;\r\n    align-items: center;`}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface h2Props {\r\n  bgColor: string;\r\n}\r\n\r\nexport const SectionHeadline = styled.h2`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2.5rem;\r\n  font-weight: 800;\r\n  width: 100%;\r\n  margin: 1rem;\r\n  margin-bottom: 3rem;\r\n  max-width: 1280px;\r\n`;\r\n\r\nexport const ArticleHeadline = styled.h2<h2Props>`\r\n  display: block;\r\n  padding: 0 0.5rem;\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  position: absolute;\r\n  top: 0;\r\n  transform: translate(-0.5rem, -50%);\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport { StyledSectionContainer, Wrapper } from \"./SectionContainer.styles\";\r\nimport { SectionHeadline } from \"components/other/Headlines/Headlines.styles\";\r\n\r\ninterface Props {\r\n  bgColor: string;\r\n  textColor: string;\r\n  headlineText?: string;\r\n  centerXY?: boolean;\r\n  children: React.ReactNode;\r\n  minusHeight?: string;\r\n}\r\n\r\nconst SectionContainer: FunctionComponent<Props> = ({\r\n  bgColor,\r\n  textColor,\r\n  headlineText,\r\n  minusHeight = \"0px\",\r\n  children,\r\n  centerXY = false,\r\n}) => {\r\n  return (\r\n    <StyledSectionContainer\r\n      bgColor={bgColor}\r\n      textColor={textColor}\r\n      minusHeight={minusHeight}\r\n    >\r\n      {headlineText && <SectionHeadline>{headlineText}</SectionHeadline>}\r\n      <Wrapper centerXY={centerXY}>{children}</Wrapper>\r\n    </StyledSectionContainer>\r\n  );\r\n};\r\n\r\nexport default SectionContainer;\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  borderColor: string;\r\n}\r\n\r\nexport const StyledArticleContainer = styled.article<Props>`\r\n  padding: 2rem;\r\n  border: 3px solid ${({ borderColor }) => borderColor};\r\n  width: 100%;\r\n  max-width: 550px;\r\n  position: relative;\r\n  border-radius: 0.25rem;\r\n  font-size: 1.2rem;\r\n  box-shadow: ${({ borderColor }) => borderColor}88 0px 3px 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  p {\r\n    margin: 1rem 0;\r\n    line-height: 1;\r\n    height: 5rem;\r\n  }\r\n\r\n  ul {\r\n    margin: 0.5rem 0;\r\n    list-style-type: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    li {\r\n      font-size: 1rem;\r\n\r\n      width: max-content;\r\n      padding: 0.5rem;\r\n      margin: 0.5rem;\r\n      position: relative;\r\n\r\n      &::before {\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute;\r\n\r\n        transform: skew(20deg);\r\n        border: 3px solid ${({ borderColor }) => borderColor};\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.articleWidthBreakPoint}) {\r\n  }\r\n`;\r\n\r\nexport const BoldText = styled.span`\r\n  font-weight: bold;\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport { StyledArticleContainer } from \"./ArticleContainer.styles\";\r\nimport { ArticleHeadline } from \"components/other/Headlines/Headlines.styles\";\r\n\r\ninterface Props {\r\n  borderColor: string;\r\n  headlineText: string;\r\n  bgColor: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ArticleContainer: FunctionComponent<Props> = ({\r\n  borderColor,\r\n  headlineText,\r\n  bgColor,\r\n  children,\r\n}) => {\r\n  return (\r\n    <StyledArticleContainer borderColor={borderColor}>\r\n      {headlineText && (\r\n        <ArticleHeadline bgColor={bgColor}>{headlineText}</ArticleHeadline>\r\n      )}\r\n      {children}\r\n    </StyledArticleContainer>\r\n  );\r\n};\r\n\r\nexport default ArticleContainer;\r\n","import styled from \"styled-components\";\r\n\r\ninterface IStyledButtonLinkProps {\r\n  textColor: string;\r\n  bgColor: string;\r\n}\r\n\r\nexport const StyledButtonLink = styled.a<IStyledButtonLinkProps>`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  padding: 0.5rem 0;\r\n  margin-top: 1rem;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  border: 2px solid ${({ bgColor }) => bgColor};\r\n  border-radius: 0.25rem;\r\n  color: ${({ textColor }) => textColor};\r\n  background: ${({ bgColor }) => bgColor};\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: ${({ bgColor }) => bgColor}88 0px 3px 8px;\r\n\r\n  &:first-child {\r\n    margin-top: 0rem;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ textColor }) => textColor};\r\n    color: ${({ bgColor }) => bgColor};\r\n  }\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.buttonsBreakPoint}) {\r\n    margin-right: 1rem;\r\n    width: 150px;\r\n\r\n    &:first-child {\r\n      margin-top: 1rem;\r\n    }\r\n    &:last-child {\r\n      margin-right: 0rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 2rem;\r\n\r\n  @media only screen and (min-width: ${({ theme }) =>\r\n      theme.buttonsBreakPoint}) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport { StyledButtonLink } from \"./ButtonLink.styles\";\r\n\r\ninterface IButtonLinkProps {\r\n  text: string;\r\n  link: string;\r\n  textColor: string;\r\n  bgColor: string;\r\n}\r\n\r\nconst ButtonLink: FunctionComponent<IButtonLinkProps> = ({\r\n  text,\r\n  link,\r\n  textColor,\r\n  bgColor,\r\n}) => {\r\n  return (\r\n    <StyledButtonLink href={link} textColor={textColor} bgColor={bgColor}>\r\n      {text}\r\n    </StyledButtonLink>\r\n  );\r\n};\r\n\r\nexport default ButtonLink;\r\n","export const theme = {\r\n  colors: {\r\n    yellowHover: \"#FFEE32\",\r\n    yellow: \"#FFFD25\",\r\n    white: \"#EDEDED\",\r\n    black: \"#333533\",\r\n    blackHover: \"#434543\",\r\n  },\r\n  headerHeight: \"5rem\",\r\n  menuBreakPoint: \"1000px\",\r\n  articleWidthBreakPoint: \"1200px\",\r\n  buttonsBreakPoint: \"550px\",\r\n};\r\n","import { FunctionComponent } from \"react\";\r\nimport SectionContainer from \"components/other/SectionContainer/SectionContainer\";\r\nimport ArticleContainer from \"components/other/ArticleContainer/ArticleContainer\";\r\nimport ButtonLink from \"components/other/ButtonLink/ButtonLink\";\r\nimport { ButtonsWrapper } from \"components/other/ButtonLink/ButtonLink.styles\";\r\nimport { BoldText } from \"components/other/ArticleContainer/ArticleContainer.styles\";\r\nimport { theme } from \"assets/styles/theme\";\r\n\r\nconst HeroSection: FunctionComponent = () => {\r\n  const {\r\n    colors: { yellow, black },\r\n    headerHeight,\r\n  } = theme;\r\n\r\n  return (\r\n    <SectionContainer\r\n      bgColor={yellow}\r\n      textColor={black}\r\n      minusHeight={headerHeight}\r\n      centerXY={true}\r\n    >\r\n      <ArticleContainer\r\n        bgColor={yellow}\r\n        headlineText={\"Hello\"}\r\n        borderColor={black}\r\n      >\r\n        My name is <BoldText>Michał Depa</BoldText> and I am{\" \"}\r\n        <BoldText>Frontend Developer</BoldText>.\r\n        <ButtonsWrapper>\r\n          <ButtonLink\r\n            textColor={yellow}\r\n            bgColor={black}\r\n            text=\"Linkedin\"\r\n            link=\"https://www.linkedin.com/in/mdepa1\"\r\n          />\r\n          <ButtonLink\r\n            textColor={yellow}\r\n            bgColor={black}\r\n            text=\"Github\"\r\n            link=\"https://github.com/depish1\"\r\n          />\r\n          <ButtonLink\r\n            textColor={yellow}\r\n            bgColor={black}\r\n            text=\"Contact me\"\r\n            link=\"#\"\r\n          />\r\n        </ButtonsWrapper>\r\n      </ArticleContainer>\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","const ProjectsData = [\r\n  {\r\n    title: \"Covid-19 Tracker\",\r\n    desc: \"Application presenting charts with basic information on the Covid-19 epidemic. The data is taken from an external API.\",\r\n    technologies: [\r\n      \"javascript (ES6+)\",\r\n      \"React\",\r\n      \"Styled Components\",\r\n      \"React Router\",\r\n      \"react-chart-js-2\",\r\n      \"REST Api\",\r\n    ],\r\n    liveLink: \"https://depish1.github.io/covid-tracker\",\r\n    githubLink: \"https://depish1.github.io/covid-tracker\",\r\n  },\r\n  {\r\n    title: \"MyBooks\",\r\n    desc: \"Online store with books with a login and registration system. The product database, transaction history and user data are stored in firebase.\",\r\n    technologies: [\r\n      \"javascript (ES6+)\",\r\n      \"React\",\r\n      \"Redux\",\r\n      \"Formik\",\r\n      \"React Router\",\r\n      \"Firebase\",\r\n      \"Styled Components\",\r\n    ],\r\n    liveLink: \"https://depish1.github.io/mybooks-ecomm\",\r\n    githubLink: \"https://depish1.github.io/mybooks-ecomm\",\r\n  },\r\n  {\r\n    title: \"Organizer\",\r\n    desc: \"Task management application integrated with firebase and having a login / registration system.\",\r\n    technologies: [\r\n      \"Typescript\",\r\n      \"React\",\r\n      \"Redux\",\r\n      \"React Hook Form\",\r\n      \"React Router\",\r\n      \"Firebase\",\r\n      \"Styled Components\",\r\n    ],\r\n    liveLink: \"https://depish1.github.io/organizer\",\r\n    githubLink: \"https://depish1.github.io/organizer\",\r\n  },\r\n  {\r\n    title: \"Portfolio\",\r\n    desc: \"Personal page created to showcase my projects and skills.\",\r\n    technologies: [\r\n      \"Typescript\",\r\n      \"React\",\r\n      \"Styled Components\",\r\n      \"React Hook Form\",\r\n    ],\r\n    liveLink: \"https://depish1.github.io/new-portfolio\",\r\n    githubLink: \"https://depish1.github.io/new-portfolio\",\r\n  },\r\n];\r\n\r\nexport default ProjectsData;\r\n","import { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ProjectsWrapper: FunctionComponent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  grid-gap: 2rem;\r\n\r\n  @media only screen and (min-width: ${({ theme }) => theme.menuBreakPoint}) {\r\n    grid-template-columns: 50% 50%;\r\n  }\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport SectionContainer from \"components/other/SectionContainer/SectionContainer\";\r\nimport ArticleContainer from \"components/other/ArticleContainer/ArticleContainer\";\r\nimport ButtonLink from \"components/other/ButtonLink/ButtonLink\";\r\nimport ProjectsArr from \"./ProjectsData\";\r\nimport { ButtonsWrapper } from \"components/other/ButtonLink/ButtonLink.styles\";\r\nimport { theme } from \"assets/styles/theme\";\r\nimport { ProjectsWrapper } from \"./ProjectsSection.styles\";\r\nimport { BoldText } from \"components/other/ArticleContainer/ArticleContainer.styles\";\r\n\r\nconst ProjectsSection: FunctionComponent = () => {\r\n  const {\r\n    colors: { yellow, black },\r\n  } = theme;\r\n\r\n  return (\r\n    <SectionContainer\r\n      bgColor={black}\r\n      textColor={yellow}\r\n      headlineText=\"Projects\"\r\n      centerXY={true}\r\n    >\r\n      <ProjectsWrapper>\r\n        {ProjectsArr.map(\r\n          ({ title, desc, technologies, liveLink, githubLink }) => (\r\n            <ArticleContainer\r\n              headlineText={title}\r\n              bgColor={black}\r\n              borderColor={yellow}\r\n              key={title}\r\n            >\r\n              <div>\r\n                <p>{desc}</p>\r\n                <BoldText>Technologies: </BoldText>\r\n                <ul>\r\n                  {technologies.map((tech) => (\r\n                    <li key={tech}>\r\n                      <span>{tech}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <ButtonsWrapper>\r\n                <ButtonLink\r\n                  text=\"Live\"\r\n                  link={liveLink}\r\n                  textColor={black}\r\n                  bgColor={yellow}\r\n                />\r\n                <ButtonLink\r\n                  text=\"Github\"\r\n                  link={githubLink}\r\n                  textColor={black}\r\n                  bgColor={yellow}\r\n                />\r\n              </ButtonsWrapper>\r\n            </ArticleContainer>\r\n          )\r\n        )}\r\n      </ProjectsWrapper>\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default ProjectsSection;\r\n","import Header from \"components/other/Header/Header\";\nimport HeroSection from \"components/sections/HeroSection/HeroSection\";\nimport ProjectsSection from \"components/sections/ProjectsSection/ProjectsSection\";\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <HeroSection />\n      <ProjectsSection />\n    </div>\n  );\n};\n\nexport default App;\n","import { menuReducer } from \"redux/menu\";\r\n\r\nconst reducer = {\r\n  menuReducer,\r\n};\r\n\r\nexport default reducer;\r\n","import reducer from \"./reducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const store = configureStore({ reducer });\r\nexport type TStore = ReturnType<typeof store.getState>;\r\nexport const useAppDispatch = () => useDispatch<TStore>();\r\n","import { createGlobalStyle } from \"styled-components\";\r\nconst GlobalStyle = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700;900&display=swap');\r\n\r\n    *, *::after, *::before {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    html, body {\r\n        box-sizing: border-box;\r\n        font-family: 'Roboto', sans-serif;\r\n        width: 100%;\r\n    }\r\n    a, button {\r\n        font-family: 'Roboto', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"redux/store\";\nimport { Provider } from \"react-redux\";\nimport GlobalStyle from \"assets/styles/GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"assets/styles/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}